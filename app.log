
  VITE v5.4.19  ready in 689 ms

  âžœ  Local:   http://localhost:1420/
=== Application starting ===
[2m2025-05-26T14:53:53.421672Z[0m [32m INFO[0m [2mgym_manager_lib::config[0m[2m:[0m Settings file not found, returning default settings.
[2m2025-05-26T14:53:53.421855Z[0m [34mDEBUG[0m [2mgym_manager_lib::db[0m[2m:[0m Database will be stored at: "/home/dc/.local/share/com.gym-manager.dev/gym_data.sqlite"
[2m2025-05-26T14:53:53.421885Z[0m [32m INFO[0m [2mgym_manager_lib::db[0m[2m:[0m Connecting to database at: sqlite:///home/dc/.local/share/com.gym-manager.dev/gym_data.sqlite
[2m2025-05-26T14:53:53.422986Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"PRAGMA foreign_keys = ON; â€¦" [3mdb.statement[0m[2m=[0m"\n\nPRAGMA foreign_keys = ON;\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m50.852Âµs [3melapsed_secs[0m[2m=[0m5.0852e-5
[2m2025-05-26T14:53:53.423509Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"PRAGMA journal_mode = WAL" [3mdb.statement[0m[2m=[0m"" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m356.974Âµs [3melapsed_secs[0m[2m=[0m0.000356974
[2m2025-05-26T14:53:53.424486Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"PRAGMA foreign_keys = ON; â€¦" [3mdb.statement[0m[2m=[0m"\n\nPRAGMA foreign_keys = ON;\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m42.968Âµs [3melapsed_secs[0m[2m=[0m4.2968e-5
[2m2025-05-26T14:53:53.424985Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"PRAGMA synchronous = NORMAL" [3mdb.statement[0m[2m=[0m"" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m367.673Âµs [3melapsed_secs[0m[2m=[0m0.000367673
[2m2025-05-26T14:53:53.425122Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"PRAGMA foreign_keys = ON" [3mdb.statement[0m[2m=[0m"" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m11.842Âµs [3melapsed_secs[0m[2m=[0m1.1842e-5
[2m2025-05-26T14:53:53.425166Z[0m [32m INFO[0m [2mgym_manager_lib::db[0m[2m:[0m Running database migrations...
[2m2025-05-26T14:53:53.426905Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"CREATE TABLE IF NOT â€¦" [3mdb.statement[0m[2m=[0m"\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n  version BIGINT PRIMARY KEY,\n  description TEXT NOT NULL,\n  installed_on TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  success BOOLEAN NOT NULL,\n  checksum BLOB NOT NULL,\n  execution_time BIGINT NOT NULL\n);\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m38.9Âµs [3melapsed_secs[0m[2m=[0m3.89e-5
[2m2025-05-26T14:53:53.427424Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT version FROM _sqlx_migrations â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  version\nFROM\n  _sqlx_migrations\nWHERE\n  success = false\nORDER BY\n  version\nLIMIT\n  1\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m72.321Âµs [3melapsed_secs[0m[2m=[0m7.2321e-5
[2m2025-05-26T14:53:53.427842Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT version, checksum FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  version,\n  checksum\nFROM\n  _sqlx_migrations\nORDER BY\n  version\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m2 [3melapsed[0m[2m=[0m45.262Âµs [3melapsed_secs[0m[2m=[0m4.5262e-5
[2m2025-05-26T14:53:53.427966Z[0m [32m INFO[0m [2mgym_manager_lib::db[0m[2m:[0m Database migrations completed.
[2m2025-05-26T14:53:53.428376Z[0m [32m INFO[0m [2mgym_manager_lib::db[0m[2m:[0m Default admin user 'admin' already exists. Skipping creation.
[2m2025-05-26T14:53:53.428579Z[0m [32m INFO[0m [2mgym_manager_lib::backup[0m[2m:[0m Spawning periodic backup change check task (Interval: 2 hours)
[2m2025-05-26T14:53:53.428908Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT EXISTS(SELECT 1 FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  EXISTS(\n    SELECT\n      1\n    FROM\n      users\n    WHERE\n      username = ?1\n    LIMIT\n      1\n  ) as \"exists: bool\"\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m129.324Âµs [3melapsed_secs[0m[2m=[0m0.000129324
[2m2025-05-26T14:53:53.430213Z[0m [32m INFO[0m [2mgym_manager_lib::config[0m[2m:[0m Settings file not found, returning default settings.
[2m2025-05-26T14:53:53.430254Z[0m [34mDEBUG[0m [2mgym_manager_lib::backup[0m[2m:[0m Periodic check skipped: Backup URL not configured.
4:56:44 PM [vite] page reload .svelte-kit/generated/client/app.js
4:59:31 PM [vite] page reload src/lib/components/ui/badge/badge.svelte
4:59:31 PM [vite] page reload src/lib/components/ui/badge/index.ts
4:59:31 PM [vite] page reload src/lib/components/ui/table/index.ts
4:59:31 PM [vite] page reload src/lib/components/ui/table/table-body.svelte
4:59:31 PM [vite] page reload src/lib/components/ui/table/table-caption.svelte
4:59:31 PM [vite] page reload src/lib/components/ui/table/table-cell.svelte
4:59:31 PM [vite] page reload src/lib/components/ui/table/table-footer.svelte
4:59:31 PM [vite] page reload src/lib/components/ui/table/table-head.svelte
4:59:31 PM [vite] page reload src/lib/components/ui/table/table-header.svelte
4:59:31 PM [vite] page reload src/lib/components/ui/table/table-row.svelte
4:59:31 PM [vite] page reload src/lib/components/ui/table/table.svelte
4:59:31 PM [vite] hmr update /src/routes/+layout.svelte, /src/app.css, /src/routes/+page.svelte, /src/lib/components/login/login.svelte
4:59:31 PM [vite] hmr update /src/routes/+page.svelte, /src/app.css, /src/lib/components/login/login.svelte
4:59:31 PM [vite] hmr update /src/routes/+layout.svelte, /src/app.css, /src/routes/+page.svelte, /src/lib/components/light-switch/light-switch.svelte, /src/lib/components/ui/button/button.svelte, /src/lib/components/ui/form/form-button.svelte
4:59:31 PM [vite] hmr update /src/lib/components/ui/card/card-content.svelte, /src/app.css
4:59:31 PM [vite] hmr update /src/lib/components/ui/card/card-footer.svelte, /src/app.css
4:59:31 PM [vite] hmr update /src/lib/components/ui/card/card-header.svelte, /src/app.css
4:59:31 PM [vite] hmr update /src/lib/components/ui/card/card-description.svelte, /src/app.css
4:59:31 PM [vite] hmr update /src/lib/components/ui/card/card-title.svelte, /src/app.css
4:59:31 PM [vite] hmr update /src/lib/components/ui/card/card.svelte, /src/app.css
4:59:31 PM [vite] hmr update /src/lib/components/ui/input/input.svelte, /src/app.css
4:59:53 PM [vite] page reload src/routes/members/+page.svelte
4:59:59 PM [vite] page reload src/routes/members/+page.svelte
5:00:32 PM [vite] page reload src/lib/models/member_with_membership.ts
5:00:45 PM [vite] page reload src/routes/members/+page.svelte
5:00:49 PM [vite] page reload src/routes/members/+page.svelte
5:00:58 PM [vite] page reload src/routes/members/+page.svelte
5:01:09 PM [vite] page reload src/routes/members/+page.svelte
5:03:53 PM [vite] page reload src/routes/members/+page.svelte
5:03:58 PM [vite] page reload src/routes/members/+page.svelte
5:04:09 PM [vite] page reload src/routes/members/+page.svelte
5:04:38 PM [vite] page reload src/routes/members/+page.svelte
5:04:46 PM [vite] page reload src/routes/members/+page.svelte
5:04:58 PM [vite] page reload src/routes/members/+page.svelte
5:05:18 PM [vite] page reload src/lib/models/member_with_membership.ts
5:05:37 PM [vite] page reload src/routes/members/+page.svelte
5:06:32 PM [vite] page reload src/routes/members/+page.svelte
5:06:38 PM [vite] page reload src/routes/members/+page.svelte
[2m2025-05-26T15:06:44.001425Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m Login attempt for user: admin
[2m2025-05-26T15:06:44.004457Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT id as `id!`, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  id as `id!`,\n  username,\n  password_hash,\n  created_at,\n  updated_at\nFROM\n  users\nWHERE\n  username = ?\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m335.907Âµs [3melapsed_secs[0m[2m=[0m0.000335907
[2m2025-05-26T15:06:44.349034Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m User 'admin' logged in successfully.
5:06:48 PM [vite] âœ¨ new dependencies optimized: lucide-svelte/icons/chevron-left, lucide-svelte/icons/ellipsis
5:06:48 PM [vite] âœ¨ optimized dependencies changed. reloading
[2m2025-05-26T15:06:48.959539Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m550.385Âµs [3melapsed_secs[0m[2m=[0m0.000550385
[2m2025-05-26T15:06:48.961000Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"PRAGMA foreign_keys = ON; â€¦" [3mdb.statement[0m[2m=[0m"\n\nPRAGMA foreign_keys = ON;\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m44.741Âµs [3melapsed_secs[0m[2m=[0m4.4741e-5
[2m2025-05-26T15:06:48.962557Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m401.656Âµs [3melapsed_secs[0m[2m=[0m0.000401656
[2m2025-05-26T15:06:59.676392Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m Login attempt for user: admin
[2m2025-05-26T15:06:59.679217Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT id as `id!`, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  id as `id!`,\n  username,\n  password_hash,\n  created_at,\n  updated_at\nFROM\n  users\nWHERE\n  username = ?\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m161.081Âµs [3melapsed_secs[0m[2m=[0m0.000161081
[2m2025-05-26T15:07:00.052385Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m User 'admin' logged in successfully.
[2m2025-05-26T15:07:01.710970Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m475.84Âµs [3melapsed_secs[0m[2m=[0m0.00047584
[2m2025-05-26T15:07:01.712545Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m124.174Âµs [3melapsed_secs[0m[2m=[0m0.000124174
5:07:48 PM [vite] hmr update /src/routes/members/+page.svelte, /src/app.css
[2m2025-05-26T15:07:48.381239Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m88.179Âµs [3melapsed_secs[0m[2m=[0m8.8179e-5
[2m2025-05-26T15:07:48.382736Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m65.087Âµs [3melapsed_secs[0m[2m=[0m6.5087e-5
5:08:22 PM [vite] hmr update /src/routes/members/+page.svelte, /src/app.css
[2m2025-05-26T15:08:22.766544Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m95.894Âµs [3melapsed_secs[0m[2m=[0m9.5894e-5
[2m2025-05-26T15:08:22.767746Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m69.265Âµs [3melapsed_secs[0m[2m=[0m6.9265e-5
5:09:04 PM [vite] hmr update /src/routes/members/+page.svelte, /src/app.css
[2m2025-05-26T15:09:05.034364Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m83.221Âµs [3melapsed_secs[0m[2m=[0m8.3221e-5
[2m2025-05-26T15:09:05.035466Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m49.6Âµs [3melapsed_secs[0m[2m=[0m4.96e-5
5:22:44 PM [vite] page reload .svelte-kit/generated/client/app.js
[2m2025-05-26T15:40:21.260465Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m Login attempt for user: admin
[2m2025-05-26T15:40:21.263521Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT id as `id!`, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  id as `id!`,\n  username,\n  password_hash,\n  created_at,\n  updated_at\nFROM\n  users\nWHERE\n  username = ?\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m431.51Âµs [3melapsed_secs[0m[2m=[0m0.00043151
[2m2025-05-26T15:40:21.634408Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m User 'admin' logged in successfully.
[2m2025-05-26T15:40:23.067655Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m107.394Âµs [3melapsed_secs[0m[2m=[0m0.000107394
[2m2025-05-26T15:40:23.068761Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"PRAGMA foreign_keys = ON; â€¦" [3mdb.statement[0m[2m=[0m"\n\nPRAGMA foreign_keys = ON;\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m52.595Âµs [3melapsed_secs[0m[2m=[0m5.2595e-5
[2m2025-05-26T15:40:23.069879Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m383.283Âµs [3melapsed_secs[0m[2m=[0m0.000383283
5:40:27 PM [vite] âœ¨ new dependencies optimized: lucide-svelte/icons/calendar, @internationalized/date
5:40:27 PM [vite] âœ¨ optimized dependencies changed. reloading
[2m2025-05-26T15:40:41.819682Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m Login attempt for user: admin
[2m2025-05-26T15:40:41.822345Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT id as `id!`, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  id as `id!`,\n  username,\n  password_hash,\n  created_at,\n  updated_at\nFROM\n  users\nWHERE\n  username = ?\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m226.339Âµs [3melapsed_secs[0m[2m=[0m0.000226339
[2m2025-05-26T15:40:42.156487Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m User 'admin' logged in successfully.
[2m2025-05-26T15:40:43.376088Z[0m [32m INFO[0m [2mgym_manager_lib::commands::membership_commands[0m[2m:[0m Fetching all membership types.
[2m2025-05-26T15:40:43.386278Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT id as 'id!', â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  id as 'id!',\n  name,\n  duration_days,\n  visit_limit,\n  price,\n  enter_by,\n  description,\n  created_at,\n  updated_at,\n  is_deleted\nFROM\n  membership_types\nWHERE\n  is_deleted = FALSE\nORDER BY\n  name ASC\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m2 [3melapsed[0m[2m=[0m8.067627ms [3melapsed_secs[0m[2m=[0m0.008067627
[2m2025-05-26T15:40:43.884560Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m797.672Âµs [3melapsed_secs[0m[2m=[0m0.000797672
[2m2025-05-26T15:40:43.885998Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"PRAGMA foreign_keys = ON; â€¦" [3mdb.statement[0m[2m=[0m"\n\nPRAGMA foreign_keys = ON;\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m73.893Âµs [3melapsed_secs[0m[2m=[0m7.3893e-5
[2m2025-05-26T15:40:43.888086Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m608.2Âµs [3melapsed_secs[0m[2m=[0m0.0006082
5:48:31 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:49:47 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:50:27 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:50:51 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:51:08 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:52:40 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:53:06 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:56:14 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:56:22 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:56:24 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:56:37 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:56:51 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:57:00 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:57:14 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:57:26 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:57:26 PM [vite] page reload src/lib/components/light-switch/date-field.svelte
5:57:38 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:58:48 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:59:05 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
5:59:12 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
[2m2025-05-26T15:59:23.302374Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m Login attempt for user: admin
[2m2025-05-26T15:59:23.304810Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT id as `id!`, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  id as `id!`,\n  username,\n  password_hash,\n  created_at,\n  updated_at\nFROM\n  users\nWHERE\n  username = ?\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m143.088Âµs [3melapsed_secs[0m[2m=[0m0.000143088
[2m2025-05-26T15:59:23.656968Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m User 'admin' logged in successfully.
[2m2025-05-26T15:59:25.302152Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m583.043Âµs [3melapsed_secs[0m[2m=[0m0.000583043
[2m2025-05-26T15:59:25.303467Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m57.223Âµs [3melapsed_secs[0m[2m=[0m5.7223e-5
6:00:23 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
6:00:39 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
[2m2025-05-26T16:00:44.105163Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m80.655Âµs [3melapsed_secs[0m[2m=[0m8.0655e-5
[2m2025-05-26T16:00:44.106297Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m78.141Âµs [3melapsed_secs[0m[2m=[0m7.8141e-5
6:01:25 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
6:01:40 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
6:01:46 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
6:01:57 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
6:02:20 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
[2m2025-05-26T16:03:15.402892Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m131.868Âµs [3melapsed_secs[0m[2m=[0m0.000131868
[2m2025-05-26T16:03:15.411711Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m75.306Âµs [3melapsed_secs[0m[2m=[0m7.5306e-5
6:04:07 PM [vite] hmr update /src/lib/components/date-field/date-field.svelte, /src/app.css
6:04:27 PM [vite] hmr update /src/lib/components/date-field/date-field.svelte, /src/app.css
6:04:42 PM [vite] hmr update /src/lib/components/date-field/date-field.svelte, /src/app.css
6:06:31 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
6:07:11 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
6:07:23 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
6:08:35 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
6:08:52 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
6:08:55 PM [vite] hmr update /src/routes/members/new/+page.svelte, /src/app.css
[2m2025-05-26T16:10:03.450386Z[0m [32m INFO[0m [2mgym_manager_lib::commands::member_commands[0m[2m:[0m Creating new member: Danilo Cvijetic
[2m2025-05-26T16:10:03.466583Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"INSERT INTO members (card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nINSERT INTO\n  members (\n    card_id,\n    short_card_id,\n    first_name,\n    last_name,\n    email,\n    phone,\n    date_of_birth,\n    created_at,\n    updated_at\n  )\nVALUES\n  (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?8)\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m9.382411ms [3melapsed_secs[0m[2m=[0m0.009382411
[2m2025-05-26T16:10:03.466881Z[0m [32m INFO[0m [2mgym_manager_lib::commands::member_commands[0m[2m:[0m Successfully inserted new member 'Danilo' with id 1.
[2m2025-05-26T16:10:03.469856Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT id, card_id, short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  id,\n  card_id,\n  short_card_id,\n  first_name,\n  last_name,\n  email,\n  phone,\n  date_of_birth,\n  created_at,\n  updated_at,\n  is_deleted\nFROM\n  members\nWHERE\n  id = ?\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m423.165Âµs [3melapsed_secs[0m[2m=[0m0.000423165
[2m2025-05-26T16:10:03.487828Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m552.959Âµs [3melapsed_secs[0m[2m=[0m0.000552959
[2m2025-05-26T16:10:03.489146Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m48.498Âµs [3melapsed_secs[0m[2m=[0m4.8498e-5
[2m2025-05-26T16:10:14.960408Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m157.294Âµs [3melapsed_secs[0m[2m=[0m0.000157294
[2m2025-05-26T16:10:14.962227Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m100.641Âµs [3melapsed_secs[0m[2m=[0m0.000100641
[2m2025-05-26T16:10:17.963532Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m213.736Âµs [3melapsed_secs[0m[2m=[0m0.000213736
[2m2025-05-26T16:10:17.965194Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m44.931Âµs [3melapsed_secs[0m[2m=[0m4.4931e-5
[2m2025-05-26T16:10:20.963968Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m314.808Âµs [3melapsed_secs[0m[2m=[0m0.000314808
[2m2025-05-26T16:10:20.964879Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m26.488Âµs [3melapsed_secs[0m[2m=[0m2.6488e-5
[2m2025-05-26T16:10:31.756131Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m126.409Âµs [3melapsed_secs[0m[2m=[0m0.000126409
[2m2025-05-26T16:10:31.758313Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m59.127Âµs [3melapsed_secs[0m[2m=[0m5.9127e-5
[2m2025-05-26T16:10:32.472079Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m195.002Âµs [3melapsed_secs[0m[2m=[0m0.000195002
[2m2025-05-26T16:10:32.473080Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"PRAGMA foreign_keys = ON; â€¦" [3mdb.statement[0m[2m=[0m"\n\nPRAGMA foreign_keys = ON;\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m43.959Âµs [3melapsed_secs[0m[2m=[0m4.3959e-5
[2m2025-05-26T16:10:32.474554Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m540.656Âµs [3melapsed_secs[0m[2m=[0m0.000540656
[2m2025-05-26T16:10:35.876410Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m279.374Âµs [3melapsed_secs[0m[2m=[0m0.000279374
[2m2025-05-26T16:10:35.877372Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m50.982Âµs [3melapsed_secs[0m[2m=[0m5.0982e-5
[2m2025-05-26T16:10:44.712683Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m Login attempt for user: admin
[2m2025-05-26T16:10:44.715531Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT id as `id!`, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  id as `id!`,\n  username,\n  password_hash,\n  created_at,\n  updated_at\nFROM\n  users\nWHERE\n  username = ?\n" [3mrows_affected[0m[2m=[0m1 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m294.071Âµs [3melapsed_secs[0m[2m=[0m0.000294071
[2m2025-05-26T16:10:45.073627Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m User 'admin' logged in successfully.
[2m2025-05-26T16:10:46.235446Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m588.964Âµs [3melapsed_secs[0m[2m=[0m0.000588964
[2m2025-05-26T16:10:46.236494Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"PRAGMA foreign_keys = ON; â€¦" [3mdb.statement[0m[2m=[0m"\n\nPRAGMA foreign_keys = ON;\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m39.892Âµs [3melapsed_secs[0m[2m=[0m3.9892e-5
[2m2025-05-26T16:10:46.237506Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m320.228Âµs [3melapsed_secs[0m[2m=[0m0.000320228
[2m2025-05-26T16:12:08.514741Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m407.195Âµs [3melapsed_secs[0m[2m=[0m0.000407195
[2m2025-05-26T16:12:08.516022Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m61.981Âµs [3melapsed_secs[0m[2m=[0m6.1981e-5
[2m2025-05-26T16:13:11.197156Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m213.664Âµs [3melapsed_secs[0m[2m=[0m0.000213664
[2m2025-05-26T16:13:11.200195Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m83.12Âµs [3melapsed_secs[0m[2m=[0m8.312e-5
6:15:07 PM [vite] hmr update /src/routes/members/+page.svelte, /src/app.css
[2m2025-05-26T16:15:13.774067Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m Login attempt for user: admin
[2m2025-05-26T16:15:13.776869Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT id as `id!`, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  id as `id!`,\n  username,\n  password_hash,\n  created_at,\n  updated_at\nFROM\n  users\nWHERE\n  username = ?\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m313.585Âµs [3melapsed_secs[0m[2m=[0m0.000313585
[2m2025-05-26T16:15:14.147980Z[0m [32m INFO[0m [2mgym_manager_lib::commands::admin_commands[0m[2m:[0m User 'admin' logged in successfully.
[2m2025-05-26T16:15:16.041222Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m583.551Âµs [3melapsed_secs[0m[2m=[0m0.000583551
[2m2025-05-26T16:15:16.043235Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m68.033Âµs [3melapsed_secs[0m[2m=[0m6.8033e-5
[2m2025-05-26T16:15:20.543800Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\n  AND (\n    LOWER(m.first_name) LIKE $1\n    OR LOWER(m.last_name) LIKE $1\n    OR LOWER(m.first_name || ' ' || m.last_name) LIKE $1\n  )\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $2 OFFSET $3\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m738.75Âµs [3melapsed_secs[0m[2m=[0m0.00073875
[2m2025-05-26T16:15:20.545786Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n  AND (\n    LOWER(m.first_name) LIKE $1\n    OR LOWER(m.last_name) LIKE $1\n    OR LOWER(m.first_name || ' ' || m.last_name) LIKE $1\n  )\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m186.175Âµs [3melapsed_secs[0m[2m=[0m0.000186175
[2m2025-05-26T16:15:25.330204Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m214.166Âµs [3melapsed_secs[0m[2m=[0m0.000214166
[2m2025-05-26T16:15:25.331831Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m168.864Âµs [3melapsed_secs[0m[2m=[0m0.000168864
[2m2025-05-26T16:15:26.423200Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\n  AND (\n    LOWER(m.first_name) LIKE $1\n    OR LOWER(m.last_name) LIKE $1\n    OR LOWER(m.first_name || ' ' || m.last_name) LIKE $1\n  )\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $2 OFFSET $3\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m752.935Âµs [3melapsed_secs[0m[2m=[0m0.000752935
[2m2025-05-26T16:15:26.425151Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n  AND (\n    LOWER(m.first_name) LIKE $1\n    OR LOWER(m.last_name) LIKE $1\n    OR LOWER(m.first_name || ' ' || m.last_name) LIKE $1\n  )\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m119.305Âµs [3melapsed_secs[0m[2m=[0m0.000119305
[2m2025-05-26T16:15:28.126195Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\n  AND (\n    LOWER(m.first_name) LIKE $1\n    OR LOWER(m.last_name) LIKE $1\n    OR LOWER(m.first_name || ' ' || m.last_name) LIKE $1\n  )\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $2 OFFSET $3\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m521.399Âµs [3melapsed_secs[0m[2m=[0m0.000521399
[2m2025-05-26T16:15:28.130916Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n  AND (\n    LOWER(m.first_name) LIKE $1\n    OR LOWER(m.last_name) LIKE $1\n    OR LOWER(m.first_name || ' ' || m.last_name) LIKE $1\n  )\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m204.037Âµs [3melapsed_secs[0m[2m=[0m0.000204037
[2m2025-05-26T16:15:30.114370Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m230.906Âµs [3melapsed_secs[0m[2m=[0m0.000230906
[2m2025-05-26T16:15:30.116269Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m86.877Âµs [3melapsed_secs[0m[2m=[0m8.6877e-5
6:16:02 PM [vite] hmr update /src/routes/members/+page.svelte, /src/app.css
[2m2025-05-26T16:16:02.261111Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m173.893Âµs [3melapsed_secs[0m[2m=[0m0.000173893
[2m2025-05-26T16:16:02.262283Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m81.086Âµs [3melapsed_secs[0m[2m=[0m8.1086e-5
[2m2025-05-26T16:16:04.786135Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\n  AND (\n    LOWER(m.first_name) LIKE $1\n    OR LOWER(m.last_name) LIKE $1\n    OR LOWER(m.first_name || ' ' || m.last_name) LIKE $1\n  )\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $2 OFFSET $3\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m0 [3melapsed[0m[2m=[0m617.442Âµs [3melapsed_secs[0m[2m=[0m0.000617442
[2m2025-05-26T16:16:04.790524Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n  AND (\n    LOWER(m.first_name) LIKE $1\n    OR LOWER(m.last_name) LIKE $1\n    OR LOWER(m.first_name || ' ' || m.last_name) LIKE $1\n  )\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m207.434Âµs [3melapsed_secs[0m[2m=[0m0.000207434
[2m2025-05-26T16:16:07.370805Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\n  AND (\n    LOWER(m.first_name) LIKE $1\n    OR LOWER(m.last_name) LIKE $1\n    OR LOWER(m.first_name || ' ' || m.last_name) LIKE $1\n  )\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $2 OFFSET $3\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m878.823Âµs [3melapsed_secs[0m[2m=[0m0.000878823
[2m2025-05-26T16:16:07.375662Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n  AND (\n    LOWER(m.first_name) LIKE $1\n    OR LOWER(m.last_name) LIKE $1\n    OR LOWER(m.first_name || ' ' || m.last_name) LIKE $1\n  )\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m540.644Âµs [3melapsed_secs[0m[2m=[0m0.000540644
[2m2025-05-26T16:16:08.377562Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m258.606Âµs [3melapsed_secs[0m[2m=[0m0.000258606
[2m2025-05-26T16:16:08.378808Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m54.168Âµs [3melapsed_secs[0m[2m=[0m5.4168e-5
6:16:29 PM [vite] hmr update /src/routes/members/+page.svelte, /src/app.css
[2m2025-05-26T16:16:29.586300Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT m.id, m.card_id, m.short_card_id, â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  m.id,\n  m.card_id,\n  m.short_card_id,\n  m.first_name,\n  m.last_name,\n  m.email,\n  m.phone,\n  m.created_at as member_created_at,\n  ms.id as membership_id,\n  mt.name as membership_type_name,\n  ms.start_date as membership_start_date,\n  ms.end_date as membership_end_date,\n  ms.status as membership_status,\n  ms.remaining_visits\nFROM\n  members m\n  LEFT JOIN (\n    SELECT\n      ms_inner.*,\n      ROW_NUMBER() OVER(\n        PARTITION BY ms_inner.member_id\n        ORDER BY\n          CASE\n            ms_inner.status\n            WHEN 'active' THEN 0\n            ELSE 1\n          END,\n          ms_inner.start_date DESC\n      ) as rn\n    FROM\n      memberships ms_inner\n    WHERE\n      ms_inner.is_deleted = FALSE\n  ) ms ON m.id = ms.member_id\n  AND ms.rn = 1\n  LEFT JOIN membership_types mt ON ms.membership_type_id = mt.id\n  AND mt.is_deleted = FALSE\nWHERE\n  m.is_deleted = FALSE\nORDER BY\n  m.last_name ASC,\n  m.first_name ASC\nLIMIT\n  $1 OFFSET $2\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m186.997Âµs [3melapsed_secs[0m[2m=[0m0.000186997
[2m2025-05-26T16:16:29.587932Z[0m [34mDEBUG[0m [2msqlx::query[0m[2m:[0m [3msummary[0m[2m=[0m"SELECT COUNT(DISTINCT m.id) FROM â€¦" [3mdb.statement[0m[2m=[0m"\n\nSELECT\n  COUNT(DISTINCT m.id)\nFROM\n  members m\nWHERE\n  m.is_deleted = FALSE\n" [3mrows_affected[0m[2m=[0m0 [3mrows_returned[0m[2m=[0m1 [3melapsed[0m[2m=[0m91.024Âµs [3melapsed_secs[0m[2m=[0m9.1024e-5
